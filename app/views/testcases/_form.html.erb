<div class="box tabular">
<%= hidden_field_tag 'copy_from', params[:copy_from] if params[:copy_from] %>
<p>
  <%= f.label :folder_id do |label| %>
    <%= (label.translation + ' <span class="required"> *</span>').html_safe %>
  <% end %>
  <%= f.collection_select :folder_id, TestcaseFolder.where(project: @project), :id, :text_method, include_blank: @testcase.new_record? ? true : false %>
</p>
<p>
<%= f.label :name do |label| %>
  <%= (label.translation + ' <span class="required"> *</span>').html_safe %>
<% end %>
<%= f.text_field :name, style: "width: 80%" %>
</p>
<p>
<%= f.label :run_in_production do |label| %>
  <%= (label.translation + ' <span class="required"> *</span>').html_safe %>
<% end %>
 <%= f.select :run_in_production, options_for_select([[t(:select_yes), true], [t(:select_no), false]], {:selected => @testcase.run_in_production}) %>
</p>
<p>
<%= f.label :priority do |label| %>
  <%= (label.translation + ' <span class="required"> *</span>').html_safe %>
<% end %>
 <%= f.select :priority, options_for_select(Testcase.priorities_list.collect {|p| [t('select_priority_'+p), p] }, {:selected => @testcase.priority}) %>
</p>
<p>
<%= f.label :duration %> <%= f.text_field :duration, style: "width: 50px" %> минут
</p>
<p style="width: 800px;">
<%= f.label :tag_list %> <%= f.text_field :tag_list, value: f.object.tag_list.to_s %> <br />
<%= stylesheet_link_tag 'jquery.tagit.css', plugin: 'redmine_testkit' %>
<%= stylesheet_link_tag 'redmine_tags', plugin: 'redmine_testkit' %>
<%= javascript_include_tag 'tag-it.min', plugin: 'redmine_testkit' %>
<%= javascript_tag "$('#testcase_tag_list').tagit({
  tagSource: function(search, showChoices) {
    var that = this;
    $.ajax({
      url: '#{url_for(:controller => 'auto_completes', :action => 'testcase_tags', :project => @project)}',
      data: {q: search.term},
      success: function(choices) {
        showChoices(that._subtractArray(jQuery.parseJSON(choices), that.assignedTags()));
      }
    });
  },
  allowSpaces: true,
  placeholderText: '#{l :testcase_add_tag_placeholder}',
  caseSensitive: false,
  removeConfirmation: true,
  showAutocompleteOnFocus: true,
});" %>
</p>
</div>
<p>
<div class="box">
<%= f.label :description do |label| %>
  <%= "<h3>#{label.translation} <span class=\"required\"> *</span></h3>".html_safe %>
<% end %>
  <%= render partial: 'common/edit_area', locals: { f: f, at: :description, rows: 15 } %>
</div>
<%= wikitoolbar_for ActionView::Base::Tags::Base.new(f.object_name, :description, :this_param_is_ignored).send(:tag_id) %>
</p>

<div class="box">
<p id="attachments_form"><label><%= l(:label_attachment_plural) %></label><%= render :partial => 'attachments/form', :locals => {:container => @testcase} %></p>
<% if @copy_from && @copy_from.attachments.any? %>
  <p>
    <label for="copy_attachments"><%= l(:label_copy_attachments) %></label>
    <%= check_box_tag 'copy_attachments', '1', true, :onclick => "$('.attachments').toggle()" %>
  </p>
<% end %>
<%= link_to_attachments (@copy_from && @copy_from.attachments.any?) ? @copy_from : @testcase, :thumbnails => false %>
</div>

<p><%= f.submit l(:button_save), disabled: true %>&nbsp;<%= link_to l(:button_cancel), :back %></p>

<%= f.fields_for :steps do |builder| %>
  <%= link_to_add_step l(:label_add_step), f, :steps %>
  <%= render 'step', f: builder %>
  <%= wikitoolbar_for ActionView::Base::Tags::Base.new(builder.object_name, :if, :this_param_is_ignored).send(:tag_id) %>
  <%= wikitoolbar_for ActionView::Base::Tags::Base.new(builder.object_name, :then, :this_param_is_ignored).send(:tag_id) %>
  <%= wikitoolbar_for ActionView::Base::Tags::Base.new(builder.object_name, :info, :this_param_is_ignored).send(:tag_id) %>
<% end %>
<%= link_to_add_step l(:label_add_step), f, :steps %>

<p><%= f.submit l(:button_save), disabled: true %>&nbsp;<%= link_to l(:button_cancel), :back %></p>

<% content_for :header_tags do %>

<style type="text/css">
  .add_steps {
    font-weight: bold;
  }
  .step_fieldset {
    margin-top: 3px;
  }
  .step_fieldset:hover {
    background-color:#ffffdd;
  }
  .box div.preview {
    background: #F7F8FD;
    border: 1px solid #e4e4e4;
    min-height: 193px;
    padding: 3px;
  }
  .draft_background {
    background: url(/images/draft.png) !important;
  }
</style>

<%= javascript_tag do %>
function testkitPreview(url, e) {
  edit = $(e).closest('div').next('div.edit')
  preview = $(e).closest('div').next('div.edit').next('div.preview')
  content = $(e).closest('div').next('div.edit').find('textarea').val()
  edit_link = $(e).closest('ul').find('a.edit')
  attachments = {}
  $.each($('#attachments_form input').serializeArray(), function() {
    attachments[this.name] = this.value;
  });
  $.ajax({
    url: url,
    type: 'post',
    data: $.extend({content: content}, attachments),
    success: function(data){
      edit.hide()
      preview.html(data)
      preview.show()
      preview.addClass('draft_background')
      $(e).addClass('selected')
      edit_link.removeClass('selected')
    }
  });
}

function backToEdit(e) {
  preview_link = $(e).closest('ul').find('a.preview')
  edit = $(e).closest('div').next('div.edit')
  preview = $(e).closest('div').next('div.edit').next('div.preview')
  preview.hide()
  edit.show()
  $(e).addClass('selected')
  preview_link.removeClass('selected')
}

$(document).ready(function() {
    $('input[type=submit]').each(function () {
      $(this).attr('disabled', false)
    })
});

<% end -%>

<% end %>

<%= javascript_tag render 'script' %>
