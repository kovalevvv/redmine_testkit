<div class="box tabular">
  <p>
    <%= f.label :name, 'Название <span class="required"> *</span>'.html_safe %>
    <%= f.text_field :name, style: "width: 77%;" %> <br />
  </p>
  <p>
    <%= f.label :description %>
    <%= f.text_area :description, style: "width: 77%; height: 100px;" %><br />
  </p>
  <p>
    <%= f.label :issue_ids %>
    <% @testkit.issues.each do |issue| %>
      <%= text_field_tag :'testkit[issue_ids][]', issue.id, :class => "relation_issue_field" %><br>
    <% end %>
    <%= text_field_tag :'testkit[issue_ids][]', nil, :class => "relation_issue_field" %><br>
    <small><%= link_to 'Добавить', '#', {:class => 'icon icon-add', :id => 'add_issue_relation_field'} %></small>
    <br />
  </p>
  <p>
    <%= f.label :version_ids %>
    <% if @versions.present? %>
      <%= f.collection_select :version_ids, @versions, :id, :name, {:include_blank => true}, :class => "in_width" %>
    <% else %>c
      Нет сборок
    <% end %>
  </p>
  <p>
    <label><%= t(:description_filter) %></label>
    <input name="search" type="text" placeholder="<%= t(:description_search) %>..." autocomplete="off" id="search">
    <input type="button" id="btnResetSearch" value="<%= t(:button_reset) %>" disabled="true">
    <span id="matches"></span>
  </p>
  <p>
    <%= f.label 'Тест-кейсы' %>
    <div id="testcases" style="width: 70%; margin-left: 180px; margin-top: -28px;">
      <div style="position: relative; float:right;"><%= link_to " ", "#", id: "x_expander", onclick: "f_expander(this)",  style: "background-image: url(/images/bullet_toggle_plus.png); padding-left: 13px;" %></div>
    </div>
  </p>
<%= javascript_tag do %>

var selected_nodes = []
var current_nodes = []

$(function() {
  $('#testcases').fancytree({
    extensions: ["filter", "persist"],
    persist: {
      cookie: { // settings passed to jquery.cookie plugin
        raw: false,
        expires: "",
        path: "<%= project_path(:id => @project.identifier) %>",
        domain: "",
        secure: false
      },
    store: "cookie",
    types: "expanded"
    },
    quicksearch: true,
  <% case action_name %>
    <% when 'new' %>
    source: { url: "<%= tree_project_testcase_folders_path %>", dataType: "json" },
    <% when 'edit' %>
    source: { url: "<%= project_testkit_tree_path(:testkit_id => @testkit.id) %>", dataType: "json" },
    <% when 'new_from_archive' %>
    source: { url: "<%= project_testkit_tree_path(:testkit_id => @testkit_from.id) %>", dataType: "json" },
    <% when 'create', 'update' %>
    source: <%= "#{@testkit.tree.flatten.to_json}".html_safe %>,
  <% end %>
    checkbox: true,
    selectMode: 3,
    select: function(event, data) {
      window.selected_nodes = $.map(data.tree.getSelectedNodes(), function(node) {
        if (node.data.type == 'Testcase')
          return [[node, '<input type="hidden" name="testkit[testcase_ids][]" value="' + node.key + '">']]
      });

      if (window.selected_nodes.length > 0) {
        $('#testcases_ids').html($.map(window.selected_nodes, function(e) {return e[1]}).join(''))
      } else {
        $('#testcases_ids').html('<input type="hidden" name="testkit[testcase_ids][]" value="">')
      }
    },
    filter: {
      autoExpand: true, // not worked :(
      autoApply: true,  // Re-apply last filter if lazy data is loaded
      counter: true,  // Show a badge with number of matching child nodes near parent icons
      fuzzy: false,  // Match single characters in order, e.g. 'fb' will match 'FooBar'
      hideExpandedCounter: true,  // Hide counter badge, when parent is expanded
      highlight: true,  // Highlight matches by wrapping inside <mark> tags
      mode: "dimm"  // Grayout unmatched nodes (pass "hide" to remove unmatched node instead)
    }
  })

  // search

  var tree = $('#testcases').fancytree("getTree")

  $('#search').keyup(function(e) {
    var n,
      match = $(this).val()

    if(e && e.which === $.ui.keyCode.ESCAPE || $.trim(match) === ""){
      $('#btnResetSearch').click()
      return
    }
    
    n = tree.filterNodes(match)
    
    $('#btnResetSearch').attr("disabled", false)
    $('#matches').text("(" + n + " совпадений)")
  }).focus();

 $('#btnResetSearch').click(function(e){
    $('#search').val("")
    $('#matches').text("")
    tree.clearFilter()
    $(this).attr("disabled", true)
    return false
  })
})

function observeAutocompleteFieldTestkit(element) {
  $(document).ready(function() {
    element.autocomplete($.extend({
      source: <%= "'#{escape_javascript auto_complete_issues_path(:project_id => @project, :scope => Setting.cross_project_subtasks)}'".html_safe %>,
      minLength: 2,
      search: function(){$('#ajax-indicator').show();},
      response: function(){$('#ajax-indicator').hide();}
    }));
    element.addClass('autocomplete');
  });
}

observeAutocompleteFieldTestkit($('.relation_issue_field'));

$(document).ready(function() {
  $('#add_issue_relation_field').click(function() {
    $("<%= j text_field_tag :'testkit[issue_ids][]', nil, :class => 'relation_issue_field' %><br>").insertAfter($('.relation_issue_field:last').next());
    observeAutocompleteFieldTestkit($('.relation_issue_field:last'));
    return false;
  });
});
<% end %>

<%= javascript_tag do %>
var current_expand = false
function f_expander(e) {
  if (current_expand) {
    current_expand = false
    $(e).css('background-image', 'url(/images/bullet_toggle_plus.png)')
    tree = $("#testcases").fancytree("getTree")
    tree.visit(function(node){
      node.setExpanded(current_expand)
    })
  } else {
    current_expand = true
    $(e).css('background-image', 'url(/images/bullet_toggle_minus.png)')
    tree = $("#testcases").fancytree("getTree")
    tree.visit(function(node){
      node.setExpanded(current_expand)
    })
  }
}
<% end %>


<div id="testcases_ids">
<% @testkit.testcases.each do |testcase| %>
    <%= f.hidden_field :testcase_ids, :multiple => true, :value => testcase.id %>
<% end %>
<% if action_name == 'new_from_archive' %>
  <% @testkit_from.testcases.each do |testcase| %>
      <%= f.hidden_field :testcase_ids, :multiple => true, :value => testcase.id %>
  <% end %>
<% end %>
</div>

</div>
<%= f.submit 'Сохранить изменения' %>
<%= button_tag 'Отменить', :type => :button, :onclick => "location.href = '#{project_testkits_path()}';", :style => 'vertical-align: middle; margin-top: 2px;' %>

<% content_for :header_tags do %>
  <%= javascript_include_tag 'jquery.elevator.min.js', :plugin => 'redmine_testkit' %>
  <%= stylesheet_link_tag 'jquery.elevator.min', :plugin => 'redmine_testkit' %>
<% end %>

<%= javascript_tag do %>
  $(function() { $.elevator(); })
<% end %>